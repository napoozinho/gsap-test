{"version":3,"file":"lenis-CLNIeItB.js","sources":["../node_modules/lenis/dist/lenis.mjs","../src/utils/lenis.js"],"sourcesContent":["// package.json\nvar version = \"1.3.10\";\n\n// packages/core/src/maths.ts\nfunction clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max));\n}\nfunction lerp(x, y, t) {\n  return (1 - t) * x + t * y;\n}\nfunction damp(x, y, lambda, deltaTime) {\n  return lerp(x, y, 1 - Math.exp(-lambda * deltaTime));\n}\nfunction modulo(n, d) {\n  return (n % d + d) % d;\n}\n\n// packages/core/src/animate.ts\nvar Animate = class {\n  isRunning = false;\n  value = 0;\n  from = 0;\n  to = 0;\n  currentTime = 0;\n  // These are instanciated in the fromTo method\n  lerp;\n  duration;\n  easing;\n  onUpdate;\n  /**\n   * Advance the animation by the given delta time\n   *\n   * @param deltaTime - The time in seconds to advance the animation\n   */\n  advance(deltaTime) {\n    if (!this.isRunning) return;\n    let completed = false;\n    if (this.duration && this.easing) {\n      this.currentTime += deltaTime;\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1);\n      completed = linearProgress >= 1;\n      const easedProgress = completed ? 1 : this.easing(linearProgress);\n      this.value = this.from + (this.to - this.from) * easedProgress;\n    } else if (this.lerp) {\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime);\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to;\n        completed = true;\n      }\n    } else {\n      this.value = this.to;\n      completed = true;\n    }\n    if (completed) {\n      this.stop();\n    }\n    this.onUpdate?.(this.value, completed);\n  }\n  /** Stop the animation */\n  stop() {\n    this.isRunning = false;\n  }\n  /**\n   * Set up the animation from a starting value to an ending value\n   * with optional parameters for lerping, duration, easing, and onUpdate callback\n   *\n   * @param from - The starting value\n   * @param to - The ending value\n   * @param options - Options for the animation\n   */\n  fromTo(from, to, { lerp: lerp2, duration, easing, onStart, onUpdate }) {\n    this.from = this.value = from;\n    this.to = to;\n    this.lerp = lerp2;\n    this.duration = duration;\n    this.easing = easing;\n    this.currentTime = 0;\n    this.isRunning = true;\n    onStart?.();\n    this.onUpdate = onUpdate;\n  }\n};\n\n// packages/core/src/debounce.ts\nfunction debounce(callback, delay) {\n  let timer;\n  return function(...args) {\n    let context = this;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = void 0;\n      callback.apply(context, args);\n    }, delay);\n  };\n}\n\n// packages/core/src/dimensions.ts\nvar Dimensions = class {\n  constructor(wrapper, content, { autoResize = true, debounce: debounceValue = 250 } = {}) {\n    this.wrapper = wrapper;\n    this.content = content;\n    if (autoResize) {\n      this.debouncedResize = debounce(this.resize, debounceValue);\n      if (this.wrapper instanceof Window) {\n        window.addEventListener(\"resize\", this.debouncedResize, false);\n      } else {\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize);\n        this.wrapperResizeObserver.observe(this.wrapper);\n      }\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize);\n      this.contentResizeObserver.observe(this.content);\n    }\n    this.resize();\n  }\n  width = 0;\n  height = 0;\n  scrollHeight = 0;\n  scrollWidth = 0;\n  // These are instanciated in the constructor as they need information from the options\n  debouncedResize;\n  wrapperResizeObserver;\n  contentResizeObserver;\n  destroy() {\n    this.wrapperResizeObserver?.disconnect();\n    this.contentResizeObserver?.disconnect();\n    if (this.wrapper === window && this.debouncedResize) {\n      window.removeEventListener(\"resize\", this.debouncedResize, false);\n    }\n  }\n  resize = () => {\n    this.onWrapperResize();\n    this.onContentResize();\n  };\n  onWrapperResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n    } else {\n      this.width = this.wrapper.clientWidth;\n      this.height = this.wrapper.clientHeight;\n    }\n  };\n  onContentResize = () => {\n    if (this.wrapper instanceof Window) {\n      this.scrollHeight = this.content.scrollHeight;\n      this.scrollWidth = this.content.scrollWidth;\n    } else {\n      this.scrollHeight = this.wrapper.scrollHeight;\n      this.scrollWidth = this.wrapper.scrollWidth;\n    }\n  };\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height\n    };\n  }\n};\n\n// packages/core/src/emitter.ts\nvar Emitter = class {\n  events = {};\n  /**\n   * Emit an event with the given data\n   * @param event Event name\n   * @param args Data to pass to the event handlers\n   */\n  emit(event, ...args) {\n    let callbacks = this.events[event] || [];\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i]?.(...args);\n    }\n  }\n  /**\n   * Add a callback to the event\n   * @param event Event name\n   * @param cb Callback function\n   * @returns Unsubscribe function\n   */\n  on(event, cb) {\n    this.events[event]?.push(cb) || (this.events[event] = [cb]);\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i);\n    };\n  }\n  /**\n   * Remove a callback from the event\n   * @param event Event name\n   * @param callback Callback function\n   */\n  off(event, callback) {\n    this.events[event] = this.events[event]?.filter((i) => callback !== i);\n  }\n  /**\n   * Remove all event listeners and clean up\n   */\n  destroy() {\n    this.events = {};\n  }\n};\n\n// packages/core/src/virtual-scroll.ts\nvar LINE_HEIGHT = 100 / 6;\nvar listenerOptions = { passive: false };\nvar VirtualScroll = class {\n  constructor(element, options = { wheelMultiplier: 1, touchMultiplier: 1 }) {\n    this.element = element;\n    this.options = options;\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n    this.onWindowResize();\n    this.element.addEventListener(\"wheel\", this.onWheel, listenerOptions);\n    this.element.addEventListener(\n      \"touchstart\",\n      this.onTouchStart,\n      listenerOptions\n    );\n    this.element.addEventListener(\n      \"touchmove\",\n      this.onTouchMove,\n      listenerOptions\n    );\n    this.element.addEventListener(\"touchend\", this.onTouchEnd, listenerOptions);\n  }\n  touchStart = {\n    x: 0,\n    y: 0\n  };\n  lastDelta = {\n    x: 0,\n    y: 0\n  };\n  window = {\n    width: 0,\n    height: 0\n  };\n  emitter = new Emitter();\n  /**\n   * Add an event listener for the given event and callback\n   *\n   * @param event Event name\n   * @param callback Callback function\n   */\n  on(event, callback) {\n    return this.emitter.on(event, callback);\n  }\n  /** Remove all event listeners and clean up */\n  destroy() {\n    this.emitter.destroy();\n    window.removeEventListener(\"resize\", this.onWindowResize, false);\n    this.element.removeEventListener(\"wheel\", this.onWheel, listenerOptions);\n    this.element.removeEventListener(\n      \"touchstart\",\n      this.onTouchStart,\n      listenerOptions\n    );\n    this.element.removeEventListener(\n      \"touchmove\",\n      this.onTouchMove,\n      listenerOptions\n    );\n    this.element.removeEventListener(\n      \"touchend\",\n      this.onTouchEnd,\n      listenerOptions\n    );\n  }\n  /**\n   * Event handler for 'touchstart' event\n   *\n   * @param event Touch event\n   */\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches ? event.targetTouches[0] : event;\n    this.touchStart.x = clientX;\n    this.touchStart.y = clientY;\n    this.lastDelta = {\n      x: 0,\n      y: 0\n    };\n    this.emitter.emit(\"scroll\", {\n      deltaX: 0,\n      deltaY: 0,\n      event\n    });\n  };\n  /** Event handler for 'touchmove' event */\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches ? event.targetTouches[0] : event;\n    const deltaX = -(clientX - this.touchStart.x) * this.options.touchMultiplier;\n    const deltaY = -(clientY - this.touchStart.y) * this.options.touchMultiplier;\n    this.touchStart.x = clientX;\n    this.touchStart.y = clientY;\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY\n    };\n    this.emitter.emit(\"scroll\", {\n      deltaX,\n      deltaY,\n      event\n    });\n  };\n  onTouchEnd = (event) => {\n    this.emitter.emit(\"scroll\", {\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event\n    });\n  };\n  /** Event handler for 'wheel' event */\n  onWheel = (event) => {\n    let { deltaX, deltaY, deltaMode } = event;\n    const multiplierX = deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.width : 1;\n    const multiplierY = deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.window.height : 1;\n    deltaX *= multiplierX;\n    deltaY *= multiplierY;\n    deltaX *= this.options.wheelMultiplier;\n    deltaY *= this.options.wheelMultiplier;\n    this.emitter.emit(\"scroll\", { deltaX, deltaY, event });\n  };\n  onWindowResize = () => {\n    this.window = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  };\n};\n\n// packages/core/src/lenis.ts\nvar defaultEasing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t));\nvar Lenis = class {\n  _isScrolling = false;\n  // true when scroll is animating\n  _isStopped = false;\n  // true if user should not be able to scroll - enable/disable programmatically\n  _isLocked = false;\n  // same as isStopped but enabled/disabled when scroll reaches target\n  _preventNextNativeScrollEvent = false;\n  _resetVelocityTimeout = null;\n  __rafID = null;\n  /**\n   * Whether or not the user is touching the screen\n   */\n  isTouching;\n  /**\n   * The time in ms since the lenis instance was created\n   */\n  time = 0;\n  /**\n   * User data that will be forwarded through the scroll event\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   userData: {\n   *     foo: 'bar'\n   *   }\n   * })\n   */\n  userData = {};\n  /**\n   * The last velocity of the scroll\n   */\n  lastVelocity = 0;\n  /**\n   * The current velocity of the scroll\n   */\n  velocity = 0;\n  /**\n   * The direction of the scroll\n   */\n  direction = 0;\n  /**\n   * The options passed to the lenis instance\n   */\n  options;\n  /**\n   * The target scroll value\n   */\n  targetScroll;\n  /**\n   * The animated scroll value\n   */\n  animatedScroll;\n  // These are instanciated here as they don't need information from the options\n  animate = new Animate();\n  emitter = new Emitter();\n  // These are instanciated in the constructor as they need information from the options\n  dimensions;\n  // This is not private because it's used in the Snap class\n  virtualScroll;\n  constructor({\n    wrapper = window,\n    content = document.documentElement,\n    eventsTarget = wrapper,\n    smoothWheel = true,\n    syncTouch = false,\n    syncTouchLerp = 0.075,\n    touchInertiaExponent = 1.7,\n    duration,\n    // in seconds\n    easing,\n    lerp: lerp2 = 0.1,\n    infinite = false,\n    orientation = \"vertical\",\n    // vertical, horizontal\n    gestureOrientation = orientation === \"horizontal\" ? \"both\" : \"vertical\",\n    // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = 1,\n    autoResize = true,\n    prevent,\n    virtualScroll,\n    overscroll = true,\n    autoRaf = false,\n    anchors = false,\n    autoToggle = false,\n    // https://caniuse.com/?search=transition-behavior\n    allowNestedScroll = false,\n    __experimental__naiveDimensions = false\n  } = {}) {\n    window.lenisVersion = version;\n    if (!wrapper || wrapper === document.documentElement) {\n      wrapper = window;\n    }\n    if (typeof duration === \"number\" && typeof easing !== \"function\") {\n      easing = defaultEasing;\n    } else if (typeof easing === \"function\" && typeof duration !== \"number\") {\n      duration = 1;\n    }\n    this.options = {\n      wrapper,\n      content,\n      eventsTarget,\n      smoothWheel,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaExponent,\n      duration,\n      easing,\n      lerp: lerp2,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      autoResize,\n      prevent,\n      virtualScroll,\n      overscroll,\n      autoRaf,\n      anchors,\n      autoToggle,\n      allowNestedScroll,\n      __experimental__naiveDimensions\n    };\n    this.dimensions = new Dimensions(wrapper, content, { autoResize });\n    this.updateClassName();\n    this.targetScroll = this.animatedScroll = this.actualScroll;\n    this.options.wrapper.addEventListener(\"scroll\", this.onNativeScroll, false);\n    this.options.wrapper.addEventListener(\"scrollend\", this.onScrollEnd, {\n      capture: true\n    });\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.addEventListener(\n        \"click\",\n        this.onClick,\n        false\n      );\n    }\n    this.options.wrapper.addEventListener(\n      \"pointerdown\",\n      this.onPointerDown,\n      false\n    );\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\n      touchMultiplier,\n      wheelMultiplier\n    });\n    this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n    if (this.options.autoToggle) {\n      this.rootElement.addEventListener(\"transitionend\", this.onTransitionEnd, {\n        passive: true\n      });\n    }\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf);\n    }\n  }\n  /**\n   * Destroy the lenis instance, remove all event listeners and clean up the class name\n   */\n  destroy() {\n    this.emitter.destroy();\n    this.options.wrapper.removeEventListener(\n      \"scroll\",\n      this.onNativeScroll,\n      false\n    );\n    this.options.wrapper.removeEventListener(\"scrollend\", this.onScrollEnd, {\n      capture: true\n    });\n    this.options.wrapper.removeEventListener(\n      \"pointerdown\",\n      this.onPointerDown,\n      false\n    );\n    if (this.options.anchors && this.options.wrapper === window) {\n      this.options.wrapper.removeEventListener(\n        \"click\",\n        this.onClick,\n        false\n      );\n    }\n    this.virtualScroll.destroy();\n    this.dimensions.destroy();\n    this.cleanUpClassName();\n    if (this.__rafID) {\n      cancelAnimationFrame(this.__rafID);\n    }\n  }\n  on(event, callback) {\n    return this.emitter.on(event, callback);\n  }\n  off(event, callback) {\n    return this.emitter.off(event, callback);\n  }\n  onScrollEnd = (e) => {\n    if (!(e instanceof CustomEvent)) {\n      if (this.isScrolling === \"smooth\" || this.isScrolling === false) {\n        e.stopPropagation();\n      }\n    }\n  };\n  dispatchScrollendEvent = () => {\n    this.options.wrapper.dispatchEvent(\n      new CustomEvent(\"scrollend\", {\n        bubbles: this.options.wrapper === window,\n        // cancelable: false,\n        detail: {\n          lenisScrollEnd: true\n        }\n      })\n    );\n  };\n  onTransitionEnd = (event) => {\n    if (event.propertyName.includes(\"overflow\")) {\n      const property = this.isHorizontal ? \"overflow-x\" : \"overflow-y\";\n      const overflow = getComputedStyle(this.rootElement)[property];\n      if ([\"hidden\", \"clip\"].includes(overflow)) {\n        this.internalStop();\n      } else {\n        this.internalStart();\n      }\n    }\n  };\n  setScroll(scroll) {\n    if (this.isHorizontal) {\n      this.options.wrapper.scrollTo({ left: scroll, behavior: \"instant\" });\n    } else {\n      this.options.wrapper.scrollTo({ top: scroll, behavior: \"instant\" });\n    }\n  }\n  onClick = (event) => {\n    const path = event.composedPath();\n    const anchor = path.find(\n      (node) => node instanceof HTMLAnchorElement && (node.getAttribute(\"href\")?.startsWith(\"#\") || node.getAttribute(\"href\")?.startsWith(\"/#\") || node.getAttribute(\"href\")?.startsWith(\"./#\"))\n    );\n    if (anchor) {\n      const id = anchor.getAttribute(\"href\");\n      if (id) {\n        const options = typeof this.options.anchors === \"object\" && this.options.anchors ? this.options.anchors : void 0;\n        let target = `#${id.split(\"#\")[1]}`;\n        if ([\"#\", \"/#\", \"./#\", \"#top\", \"/#top\", \"./#top\"].includes(id)) {\n          target = 0;\n        }\n        this.scrollTo(target, options);\n      }\n    }\n  };\n  onPointerDown = (event) => {\n    if (event.button === 1) {\n      this.reset();\n    }\n  };\n  onVirtualScroll = (data) => {\n    if (typeof this.options.virtualScroll === \"function\" && this.options.virtualScroll(data) === false)\n      return;\n    const { deltaX, deltaY, event } = data;\n    this.emitter.emit(\"virtual-scroll\", { deltaX, deltaY, event });\n    if (event.ctrlKey) return;\n    if (event.lenisStopPropagation) return;\n    const isTouch = event.type.includes(\"touch\");\n    const isWheel = event.type.includes(\"wheel\");\n    this.isTouching = event.type === \"touchstart\" || event.type === \"touchmove\";\n    const isClickOrTap = deltaX === 0 && deltaY === 0;\n    const isTapToStop = this.options.syncTouch && isTouch && event.type === \"touchstart\" && isClickOrTap && !this.isStopped && !this.isLocked;\n    if (isTapToStop) {\n      this.reset();\n      return;\n    }\n    const isUnknownGesture = this.options.gestureOrientation === \"vertical\" && deltaY === 0 || this.options.gestureOrientation === \"horizontal\" && deltaX === 0;\n    if (isClickOrTap || isUnknownGesture) {\n      return;\n    }\n    let composedPath = event.composedPath();\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement));\n    const prevent = this.options.prevent;\n    if (!!composedPath.find(\n      (node) => node instanceof HTMLElement && (typeof prevent === \"function\" && prevent?.(node) || node.hasAttribute?.(\"data-lenis-prevent\") || isTouch && node.hasAttribute?.(\"data-lenis-prevent-touch\") || isWheel && node.hasAttribute?.(\"data-lenis-prevent-wheel\") || this.options.allowNestedScroll && this.checkNestedScroll(node, { deltaX, deltaY }))\n    ))\n      return;\n    if (this.isStopped || this.isLocked) {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      return;\n    }\n    const isSmooth = this.options.syncTouch && isTouch || this.options.smoothWheel && isWheel;\n    if (!isSmooth) {\n      this.isScrolling = \"native\";\n      this.animate.stop();\n      event.lenisStopPropagation = true;\n      return;\n    }\n    let delta = deltaY;\n    if (this.options.gestureOrientation === \"both\") {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX;\n    } else if (this.options.gestureOrientation === \"horizontal\") {\n      delta = deltaX;\n    }\n    if (!this.options.overscroll || this.options.infinite || this.options.wrapper !== window && (this.animatedScroll > 0 && this.animatedScroll < this.limit || this.animatedScroll === 0 && deltaY > 0 || this.animatedScroll === this.limit && deltaY < 0)) {\n      event.lenisStopPropagation = true;\n    }\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const isSyncTouch = isTouch && this.options.syncTouch;\n    const isTouchEnd = isTouch && event.type === \"touchend\";\n    const hasTouchInertia = isTouchEnd;\n    if (hasTouchInertia) {\n      delta = Math.sign(this.velocity) * Math.pow(Math.abs(this.velocity), this.options.touchInertiaExponent);\n    }\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...isSyncTouch ? {\n        lerp: hasTouchInertia ? this.options.syncTouchLerp : 1\n        // immediate: !hasTouchInertia,\n      } : {\n        lerp: this.options.lerp,\n        duration: this.options.duration,\n        easing: this.options.easing\n      }\n    });\n  };\n  /**\n   * Force lenis to recalculate the dimensions\n   */\n  resize() {\n    this.dimensions.resize();\n    this.animatedScroll = this.targetScroll = this.actualScroll;\n    this.emit();\n  }\n  emit() {\n    this.emitter.emit(\"scroll\", this);\n  }\n  onNativeScroll = () => {\n    if (this._resetVelocityTimeout !== null) {\n      clearTimeout(this._resetVelocityTimeout);\n      this._resetVelocityTimeout = null;\n    }\n    if (this._preventNextNativeScrollEvent) {\n      this._preventNextNativeScrollEvent = false;\n      return;\n    }\n    if (this.isScrolling === false || this.isScrolling === \"native\") {\n      const lastScroll = this.animatedScroll;\n      this.animatedScroll = this.targetScroll = this.actualScroll;\n      this.lastVelocity = this.velocity;\n      this.velocity = this.animatedScroll - lastScroll;\n      this.direction = Math.sign(\n        this.animatedScroll - lastScroll\n      );\n      if (!this.isStopped) {\n        this.isScrolling = \"native\";\n      }\n      this.emit();\n      if (this.velocity !== 0) {\n        this._resetVelocityTimeout = setTimeout(() => {\n          this.lastVelocity = this.velocity;\n          this.velocity = 0;\n          this.isScrolling = false;\n          this.emit();\n        }, 400);\n      }\n    }\n  };\n  reset() {\n    this.isLocked = false;\n    this.isScrolling = false;\n    this.animatedScroll = this.targetScroll = this.actualScroll;\n    this.lastVelocity = this.velocity = 0;\n    this.animate.stop();\n  }\n  /**\n   * Start lenis scroll after it has been stopped\n   */\n  start() {\n    if (!this.isStopped) return;\n    if (this.options.autoToggle) {\n      this.rootElement.style.removeProperty(\"overflow\");\n      return;\n    }\n    this.internalStart();\n  }\n  internalStart() {\n    if (!this.isStopped) return;\n    this.reset();\n    this.isStopped = false;\n    this.emit();\n  }\n  /**\n   * Stop lenis scroll\n   */\n  stop() {\n    if (this.isStopped) return;\n    if (this.options.autoToggle) {\n      this.rootElement.style.setProperty(\"overflow\", \"clip\");\n      return;\n    }\n    this.internalStop();\n  }\n  internalStop() {\n    if (this.isStopped) return;\n    this.reset();\n    this.isStopped = true;\n    this.emit();\n  }\n  /**\n   * RequestAnimationFrame for lenis\n   *\n   * @param time The time in ms from an external clock like `requestAnimationFrame` or Tempus\n   */\n  raf = (time) => {\n    const deltaTime = time - (this.time || time);\n    this.time = time;\n    this.animate.advance(deltaTime * 1e-3);\n    if (this.options.autoRaf) {\n      this.__rafID = requestAnimationFrame(this.raf);\n    }\n  };\n  /**\n   * Scroll to a target value\n   *\n   * @param target The target value to scroll to\n   * @param options The options for the scroll\n   *\n   * @example\n   * lenis.scrollTo(100, {\n   *   offset: 100,\n   *   duration: 1,\n   *   easing: (t) => 1 - Math.cos((t * Math.PI) / 2),\n   *   lerp: 0.1,\n   *   onStart: () => {\n   *     console.log('onStart')\n   *   },\n   *   onComplete: () => {\n   *     console.log('onComplete')\n   *   },\n   * })\n   */\n  scrollTo(target, {\n    offset = 0,\n    immediate = false,\n    lock = false,\n    duration = this.options.duration,\n    easing = this.options.easing,\n    lerp: lerp2 = this.options.lerp,\n    onStart,\n    onComplete,\n    force = false,\n    // scroll even if stopped\n    programmatic = true,\n    // called from outside of the class\n    userData\n  } = {}) {\n    if ((this.isStopped || this.isLocked) && !force) return;\n    if (typeof target === \"string\" && [\"top\", \"left\", \"start\"].includes(target)) {\n      target = 0;\n    } else if (typeof target === \"string\" && [\"bottom\", \"right\", \"end\"].includes(target)) {\n      target = this.limit;\n    } else {\n      let node;\n      if (typeof target === \"string\") {\n        node = document.querySelector(target);\n      } else if (target instanceof HTMLElement && target?.nodeType) {\n        node = target;\n      }\n      if (node) {\n        if (this.options.wrapper !== window) {\n          const wrapperRect = this.rootElement.getBoundingClientRect();\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top;\n        }\n        const rect = node.getBoundingClientRect();\n        target = (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll;\n      }\n    }\n    if (typeof target !== \"number\") return;\n    target += offset;\n    target = Math.round(target);\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll;\n        const distance = target - this.animatedScroll;\n        if (distance > this.limit / 2) {\n          target = target - this.limit;\n        } else if (distance < -this.limit / 2) {\n          target = target + this.limit;\n        }\n      }\n    } else {\n      target = clamp(0, target, this.limit);\n    }\n    if (target === this.targetScroll) {\n      onStart?.(this);\n      onComplete?.(this);\n      return;\n    }\n    this.userData = userData ?? {};\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target;\n      this.setScroll(this.scroll);\n      this.reset();\n      this.preventNextNativeScrollEvent();\n      this.emit();\n      onComplete?.(this);\n      this.userData = {};\n      requestAnimationFrame(() => {\n        this.dispatchScrollendEvent();\n      });\n      return;\n    }\n    if (!programmatic) {\n      this.targetScroll = target;\n    }\n    if (typeof duration === \"number\" && typeof easing !== \"function\") {\n      easing = defaultEasing;\n    } else if (typeof easing === \"function\" && typeof duration !== \"number\") {\n      duration = 1;\n    }\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp: lerp2,\n      onStart: () => {\n        if (lock) this.isLocked = true;\n        this.isScrolling = \"smooth\";\n        onStart?.(this);\n      },\n      onUpdate: (value, completed) => {\n        this.isScrolling = \"smooth\";\n        this.lastVelocity = this.velocity;\n        this.velocity = value - this.animatedScroll;\n        this.direction = Math.sign(this.velocity);\n        this.animatedScroll = value;\n        this.setScroll(this.scroll);\n        if (programmatic) {\n          this.targetScroll = value;\n        }\n        if (!completed) this.emit();\n        if (completed) {\n          this.reset();\n          this.emit();\n          onComplete?.(this);\n          this.userData = {};\n          requestAnimationFrame(() => {\n            this.dispatchScrollendEvent();\n          });\n          this.preventNextNativeScrollEvent();\n        }\n      }\n    });\n  }\n  preventNextNativeScrollEvent() {\n    this._preventNextNativeScrollEvent = true;\n    requestAnimationFrame(() => {\n      this._preventNextNativeScrollEvent = false;\n    });\n  }\n  checkNestedScroll(node, { deltaX, deltaY }) {\n    const time = Date.now();\n    const cache = node._lenis ??= {};\n    let hasOverflowX, hasOverflowY, isScrollableX, isScrollableY, scrollWidth, scrollHeight, clientWidth, clientHeight;\n    const gestureOrientation = this.options.gestureOrientation;\n    if (time - (cache.time ?? 0) > 2e3) {\n      cache.time = Date.now();\n      const computedStyle = window.getComputedStyle(node);\n      cache.computedStyle = computedStyle;\n      const overflowXString = computedStyle.overflowX;\n      const overflowYString = computedStyle.overflowY;\n      hasOverflowX = [\"auto\", \"overlay\", \"scroll\"].includes(overflowXString);\n      hasOverflowY = [\"auto\", \"overlay\", \"scroll\"].includes(overflowYString);\n      cache.hasOverflowX = hasOverflowX;\n      cache.hasOverflowY = hasOverflowY;\n      if (!hasOverflowX && !hasOverflowY) return false;\n      if (gestureOrientation === \"vertical\" && !hasOverflowY) return false;\n      if (gestureOrientation === \"horizontal\" && !hasOverflowX) return false;\n      scrollWidth = node.scrollWidth;\n      scrollHeight = node.scrollHeight;\n      clientWidth = node.clientWidth;\n      clientHeight = node.clientHeight;\n      isScrollableX = scrollWidth > clientWidth;\n      isScrollableY = scrollHeight > clientHeight;\n      cache.isScrollableX = isScrollableX;\n      cache.isScrollableY = isScrollableY;\n      cache.scrollWidth = scrollWidth;\n      cache.scrollHeight = scrollHeight;\n      cache.clientWidth = clientWidth;\n      cache.clientHeight = clientHeight;\n    } else {\n      isScrollableX = cache.isScrollableX;\n      isScrollableY = cache.isScrollableY;\n      hasOverflowX = cache.hasOverflowX;\n      hasOverflowY = cache.hasOverflowY;\n      scrollWidth = cache.scrollWidth;\n      scrollHeight = cache.scrollHeight;\n      clientWidth = cache.clientWidth;\n      clientHeight = cache.clientHeight;\n    }\n    if (!hasOverflowX && !hasOverflowY || !isScrollableX && !isScrollableY) {\n      return false;\n    }\n    if (gestureOrientation === \"vertical\" && (!hasOverflowY || !isScrollableY))\n      return false;\n    if (gestureOrientation === \"horizontal\" && (!hasOverflowX || !isScrollableX))\n      return false;\n    let orientation;\n    if (gestureOrientation === \"horizontal\") {\n      orientation = \"x\";\n    } else if (gestureOrientation === \"vertical\") {\n      orientation = \"y\";\n    } else {\n      const isScrollingX = deltaX !== 0;\n      const isScrollingY = deltaY !== 0;\n      if (isScrollingX && hasOverflowX && isScrollableX) {\n        orientation = \"x\";\n      }\n      if (isScrollingY && hasOverflowY && isScrollableY) {\n        orientation = \"y\";\n      }\n    }\n    if (!orientation) return false;\n    let scroll, maxScroll, delta, hasOverflow, isScrollable;\n    if (orientation === \"x\") {\n      scroll = node.scrollLeft;\n      maxScroll = scrollWidth - clientWidth;\n      delta = deltaX;\n      hasOverflow = hasOverflowX;\n      isScrollable = isScrollableX;\n    } else if (orientation === \"y\") {\n      scroll = node.scrollTop;\n      maxScroll = scrollHeight - clientHeight;\n      delta = deltaY;\n      hasOverflow = hasOverflowY;\n      isScrollable = isScrollableY;\n    } else {\n      return false;\n    }\n    const willScroll = delta > 0 ? scroll < maxScroll : scroll > 0;\n    return willScroll && hasOverflow && isScrollable;\n  }\n  /**\n   * The root element on which lenis is instanced\n   */\n  get rootElement() {\n    return this.options.wrapper === window ? document.documentElement : this.options.wrapper;\n  }\n  /**\n   * The limit which is the maximum scroll value\n   */\n  get limit() {\n    if (this.options.__experimental__naiveDimensions) {\n      if (this.isHorizontal) {\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth;\n      } else {\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight;\n      }\n    } else {\n      return this.dimensions.limit[this.isHorizontal ? \"x\" : \"y\"];\n    }\n  }\n  /**\n   * Whether or not the scroll is horizontal\n   */\n  get isHorizontal() {\n    return this.options.orientation === \"horizontal\";\n  }\n  /**\n   * The actual scroll value\n   */\n  get actualScroll() {\n    const wrapper = this.options.wrapper;\n    return this.isHorizontal ? wrapper.scrollX ?? wrapper.scrollLeft : wrapper.scrollY ?? wrapper.scrollTop;\n  }\n  /**\n   * The current scroll value\n   */\n  get scroll() {\n    return this.options.infinite ? modulo(this.animatedScroll, this.limit) : this.animatedScroll;\n  }\n  /**\n   * The progress of the scroll relative to the limit\n   */\n  get progress() {\n    return this.limit === 0 ? 1 : this.scroll / this.limit;\n  }\n  /**\n   * Current scroll state\n   */\n  get isScrolling() {\n    return this._isScrolling;\n  }\n  set isScrolling(value) {\n    if (this._isScrolling !== value) {\n      this._isScrolling = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is stopped\n   */\n  get isStopped() {\n    return this._isStopped;\n  }\n  set isStopped(value) {\n    if (this._isStopped !== value) {\n      this._isStopped = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is locked\n   */\n  get isLocked() {\n    return this._isLocked;\n  }\n  set isLocked(value) {\n    if (this._isLocked !== value) {\n      this._isLocked = value;\n      this.updateClassName();\n    }\n  }\n  /**\n   * Check if lenis is smooth scrolling\n   */\n  get isSmooth() {\n    return this.isScrolling === \"smooth\";\n  }\n  /**\n   * The class name applied to the wrapper element\n   */\n  get className() {\n    let className = \"lenis\";\n    if (this.options.autoToggle) className += \" lenis-autoToggle\";\n    if (this.isStopped) className += \" lenis-stopped\";\n    if (this.isLocked) className += \" lenis-locked\";\n    if (this.isScrolling) className += \" lenis-scrolling\";\n    if (this.isScrolling === \"smooth\") className += \" lenis-smooth\";\n    return className;\n  }\n  updateClassName() {\n    this.cleanUpClassName();\n    this.rootElement.className = `${this.rootElement.className} ${this.className}`.trim();\n  }\n  cleanUpClassName() {\n    this.rootElement.className = this.rootElement.className.replace(/lenis(-\\w+)?/g, \"\").trim();\n  }\n};\nexport {\n  Lenis as default\n};\n//# sourceMappingURL=lenis.mjs.map","import Lenis from 'lenis'\nimport 'lenis/dist/lenis.css'\nimport gsap from 'gsap'\nimport ScrollTrigger from 'gsap/ScrollTrigger'\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst lenis = new Lenis()\n\nlenis.on('scroll', ScrollTrigger.update)\n\ngsap.ticker.add((time) => {\n  lenis.raf(time * 1000)\n})\n\ngsap.ticker.lagSmoothing(0)\n\n// Export the lenis instance for use in other modules\nexport { lenis }\n"],"names":["clamp","min","input","max","Math","Animate","isRunning","value","from","to","currentTime","lerp","duration","easing","onUpdate","advance","deltaTime","this","completed","linearProgress","easedProgress","x","y","lambda","t","exp","damp","round","stop","fromTo","lerp2","onStart","Dimensions","constructor","wrapper","content","autoResize","debounce","debounceValue","debouncedResize","callback","delay","timer","args","context","clearTimeout","setTimeout","apply","resize","Window","window","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","width","height","scrollHeight","scrollWidth","destroy","disconnect","removeEventListener","onWrapperResize","onContentResize","innerWidth","innerHeight","clientWidth","clientHeight","limit","Emitter","events","emit","event","callbacks","i","length","on","cb","push","filter","off","LINE_HEIGHT","listenerOptions","passive","VirtualScroll","element","options","wheelMultiplier","touchMultiplier","onWindowResize","onWheel","onTouchStart","onTouchMove","onTouchEnd","touchStart","lastDelta","emitter","clientX","clientY","targetTouches","deltaX","deltaY","deltaMode","defaultEasing","pow","gsap","registerPlugin","ScrollTrigger","lenis","_isScrolling","_isStopped","_isLocked","_preventNextNativeScrollEvent","_resetVelocityTimeout","__rafID","isTouching","time","userData","lastVelocity","velocity","direction","targetScroll","animatedScroll","animate","dimensions","virtualScroll","document","documentElement","eventsTarget","smoothWheel","syncTouch","syncTouchLerp","touchInertiaExponent","infinite","orientation","gestureOrientation","prevent","overscroll","autoRaf","anchors","autoToggle","allowNestedScroll","__experimental__naiveDimensions","lenisVersion","updateClassName","actualScroll","onNativeScroll","onScrollEnd","capture","onClick","onPointerDown","onVirtualScroll","rootElement","onTransitionEnd","requestAnimationFrame","raf","cleanUpClassName","cancelAnimationFrame","e","CustomEvent","isScrolling","stopPropagation","dispatchScrollendEvent","dispatchEvent","bubbles","detail","lenisScrollEnd","propertyName","includes","property","isHorizontal","overflow","getComputedStyle","internalStop","internalStart","setScroll","scroll","scrollTo","left","behavior","top","anchor","composedPath","find","node","HTMLAnchorElement","getAttribute","startsWith","id","target","split","button","reset","data","ctrlKey","lenisStopPropagation","isTouch","type","isWheel","isClickOrTap","isStopped","isLocked","isUnknownGesture","slice","indexOf","HTMLElement","hasAttribute","checkNestedScroll","cancelable","preventDefault","delta","abs","isSyncTouch","hasTouchInertia","sign","programmatic","lastScroll","start","style","removeProperty","setProperty","offset","immediate","lock","onComplete","force","querySelector","nodeType","wrapperRect","getBoundingClientRect","rect","distance","preventNextNativeScrollEvent","Date","now","cache","_lenis","hasOverflowX","hasOverflowY","isScrollableX","isScrollableY","computedStyle","overflowXString","overflowX","overflowYString","overflowY","maxScroll","hasOverflow","isScrollable","scrollLeft","scrollTop","scrollX","scrollY","n","d","progress","isSmooth","className","trim","replace","update","ticker","add","lagSmoothing"],"mappings":"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","x_google_ignoreList":[0]}